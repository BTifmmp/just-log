const Colors = {
  gray: {
    "50": "rgb(15, 15, 15)",
    "100": "rgb(15, 15, 15)",
    "150": "rgb(30, 30, 30)",
    "200": "rgb(40, 40, 40)",
    "250": "rgb(46, 46, 46)",
    "300": "rgb(52, 52, 52)",
    "350": "rgb(64, 64, 64)",
    "400": "rgb(68, 68, 68)",
    "450": "rgb(75, 75, 75)",
    "500": "rgb(82, 82, 82)",
    "550": "rgb(100, 100, 100)",
    "600": "rgb(120, 120, 120)",
    "650": "rgb(145, 145, 145)",
    "700": "rgb(165, 165, 165)",
    "750": "rgb(185, 185, 185)",
    "800": "rgb(200, 200, 200)",
    "850": "rgb(220, 220, 220)",
    "900": "rgb(240, 240, 240)",
    "950": "rgb(255, 255, 255)"
  },

  red: {
    "50": "rgb(255, 215, 215)",  // Lightest
    "100": "rgb(255, 191, 191)",
    "200": "rgb(255, 163, 163)",
    "300": "rgb(252, 130, 130)",
    "400": "rgb(247, 105, 105)",
    "500": "rgb(236, 72, 72)",  // Base color (textRedMid)
    "600": "rgb(210, 62, 62)",
    "700": "rgb(184, 52, 52)",
    "800": "rgb(157, 42, 42)",
    "900": "rgb(131, 32, 32)"   // Darkest
  },

  blue: {
    "50": "rgb(210, 240, 255)",
    "100": "rgb(180, 220, 255)",
    "200": "rgb(145, 200, 255)",
    "300": "rgb(110, 180, 255)",
    "400": "rgb(75, 160, 250)",
    "500": "rgb(40, 130, 240)",
    "600": "rgb(32, 115, 220)",
    "700": "rgb(25, 95, 200)",
    "800": "rgb(18, 80, 175)",
    "900": "rgb(12, 65, 150)"
  },
  spacer: 'rgb(32, 32, 36)',
  spacerLight: 'rgb(64, 64, 70)',
  addOpacity: (color: string, opacity: number) => {
    const [r, g, b] = color.match(/\d+/g)!.map(Number);
    return `rgba(${r}, ${g}, ${b}, ${opacity})`;
  }

}

export const ThumbnailColors =
  [
    "rgb(179, 77, 77)",
    "rgb(179, 78, 77)",
    "rgb(179, 80, 77)",
    "rgb(179, 83, 77)",
    "rgb(179, 85, 77)",
    "rgb(179, 87, 77)",
    "rgb(179, 88, 77)",
    "rgb(179, 90, 77)",
    "rgb(179, 94, 77)",
    "rgb(179, 95, 77)",
    "rgb(179, 97, 77)",
    "rgb(179, 99, 77)",
    "rgb(179, 100, 77)",
    "rgb(179, 104, 77)",
    "rgb(179, 105, 77)",
    "rgb(179, 107, 77)",
    "rgb(179, 109, 77)",
    "rgb(179, 110, 77)",
    "rgb(179, 114, 77)",
    "rgb(179, 116, 77)",
    "rgb(179, 117, 77)",
    "rgb(179, 119, 77)",
    "rgb(179, 121, 77)",
    "rgb(179, 124, 77)",
    "rgb(179, 126, 77)",
    "rgb(179, 128, 77)",
    "rgb(179, 129, 77)",
    "rgb(179, 131, 77)",
    "rgb(179, 134, 77)",
    "rgb(179, 136, 77)",
    "rgb(179, 138, 77)",
    "rgb(179, 139, 77)",
    "rgb(179, 141, 77)",
    "rgb(179, 145, 77)",
    "rgb(179, 146, 77)",
    "rgb(179, 148, 77)",
    "rgb(179, 150, 77)",
    "rgb(179, 151, 77)",
    "rgb(179, 155, 77)",
    "rgb(179, 156, 77)",
    "rgb(179, 158, 77)",
    "rgb(179, 160, 77)",
    "rgb(179, 161, 77)",
    "rgb(179, 165, 77)",
    "rgb(179, 167, 77)",
    "rgb(179, 168, 77)",
    "rgb(179, 170, 77)",
    "rgb(179, 172, 77)",
    "rgb(179, 175, 77)",
    "rgb(179, 177, 77)",
    "rgb(179, 179, 77)",
    "rgb(177, 179, 77)",
    "rgb(175, 179, 77)",
    "rgb(172, 179, 77)",
    "rgb(170, 179, 77)",
    "rgb(168, 179, 77)",
    "rgb(167, 179, 77)",
    "rgb(165, 179, 77)",
    "rgb(162, 179, 77)",
    "rgb(160, 179, 77)",
    "rgb(158, 179, 77)",
    "rgb(156, 179, 77)",
    "rgb(155, 179, 77)",
    "rgb(151, 179, 77)",
    "rgb(150, 179, 77)",
    "rgb(148, 179, 77)",
    "rgb(146, 179, 77)",
    "rgb(145, 179, 77)",
    "rgb(141, 179, 77)",
    "rgb(139, 179, 77)",
    "rgb(138, 179, 77)",
    "rgb(136, 179, 77)",
    "rgb(134, 179, 77)",
    "rgb(131, 179, 77)",
    "rgb(129, 179, 77)",
    "rgb(128, 179, 77)",
    "rgb(126, 179, 77)",
    "rgb(124, 179, 77)",
    "rgb(121, 179, 77)",
    "rgb(119, 179, 77)",
    "rgb(117, 179, 77)",
    "rgb(116, 179, 77)",
    "rgb(114, 179, 77)",
    "rgb(110, 179, 77)",
    "rgb(109, 179, 77)",
    "rgb(107, 179, 77)",
    "rgb(105, 179, 77)",
    "rgb(104, 179, 77)",
    "rgb(100, 179, 77)",
    "rgb(99, 179, 77)",
    "rgb(97, 179, 77)",
    "rgb(95, 179, 77)",
    "rgb(94, 179, 77)",
    "rgb(90, 179, 77)",
    "rgb(88, 179, 77)",
    "rgb(87, 179, 77)",
    "rgb(85, 179, 77)",
    "rgb(83, 179, 77)",
    "rgb(80, 179, 77)",
    "rgb(78, 179, 77)",
    "rgb(77, 179, 77)",
    "rgb(77, 179, 78)",
    "rgb(77, 179, 80)",
    "rgb(77, 179, 83)",
    "rgb(77, 179, 85)",
    "rgb(77, 179, 87)",
    "rgb(77, 179, 88)",
    "rgb(77, 179, 90)",
    "rgb(77, 179, 93)",
    "rgb(77, 179, 95)",
    "rgb(77, 179, 97)",
    "rgb(77, 179, 99)",
    "rgb(77, 179, 100)",
    "rgb(77, 179, 104)",
    "rgb(77, 179, 105)",
    "rgb(77, 179, 107)",
    "rgb(77, 179, 109)",
    "rgb(77, 179, 111)",
    "rgb(77, 179, 114)",
    "rgb(77, 179, 116)",
    "rgb(77, 179, 117)",
    "rgb(77, 179, 119)",
    "rgb(77, 179, 121)",
    "rgb(77, 179, 124)",
    "rgb(77, 179, 126)",
    "rgb(77, 179, 128)",
    "rgb(77, 179, 129)",
    "rgb(77, 179, 131)",
    "rgb(77, 179, 134)",
    "rgb(77, 179, 136)",
    "rgb(77, 179, 138)",
    "rgb(77, 179, 139)",
    "rgb(77, 179, 141)",
    "rgb(77, 179, 144)",
    "rgb(77, 179, 146)",
    "rgb(77, 179, 148)",
    "rgb(77, 179, 150)",
    "rgb(77, 179, 151)",
    "rgb(77, 179, 155)",
    "rgb(77, 179, 156)",
    "rgb(77, 179, 158)",
    "rgb(77, 179, 160)",
    "rgb(77, 179, 162)",
    "rgb(77, 179, 165)",
    "rgb(77, 179, 167)",
    "rgb(77, 179, 168)",
    "rgb(77, 179, 170)",
    "rgb(77, 179, 172)",
    "rgb(77, 179, 175)",
    "rgb(77, 179, 177)",
    "rgb(77, 179, 179)",
    "rgb(77, 177, 179)",
    "rgb(77, 175, 179)",
    "rgb(77, 172, 179)",
    "rgb(77, 170, 179)",
    "rgb(77, 168, 179)",
    "rgb(77, 167, 179)",
    "rgb(77, 165, 179)",
    "rgb(77, 162, 179)",
    "rgb(77, 160, 179)",
    "rgb(77, 158, 179)",
    "rgb(77, 156, 179)",
    "rgb(77, 155, 179)",
    "rgb(77, 151, 179)",
    "rgb(77, 150, 179)",
    "rgb(77, 148, 179)",
    "rgb(77, 146, 179)",
    "rgb(77, 144, 179)",
    "rgb(77, 141, 179)",
    "rgb(77, 139, 179)",
    "rgb(77, 138, 179)",
    "rgb(77, 136, 179)",
    "rgb(77, 134, 179)",
    "rgb(77, 131, 179)",
    "rgb(77, 129, 179)",
    "rgb(77, 128, 179)",
    "rgb(77, 126, 179)",
    "rgb(77, 124, 179)",
    "rgb(77, 121, 179)",
    "rgb(77, 119, 179)",
    "rgb(77, 117, 179)",
    "rgb(77, 116, 179)",
    "rgb(77, 114, 179)",
    "rgb(77, 111, 179)",
    "rgb(77, 109, 179)",
    "rgb(77, 107, 179)",
    "rgb(77, 105, 179)",
    "rgb(77, 104, 179)",
    "rgb(77, 100, 179)",
    "rgb(77, 99, 179)",
    "rgb(77, 97, 179)",
    "rgb(77, 95, 179)",
    "rgb(77, 93, 179)",
    "rgb(77, 90, 179)",
    "rgb(77, 88, 179)",
    "rgb(77, 87, 179)",
    "rgb(77, 85, 179)",
    "rgb(77, 83, 179)",
    "rgb(77, 80, 179)",
    "rgb(77, 78, 179)",
    "rgb(77, 77, 179)",
    "rgb(78, 77, 179)",
    "rgb(80, 77, 179)",
    "rgb(83, 77, 179)",
    "rgb(85, 77, 179)",
    "rgb(87, 77, 179)",
    "rgb(88, 77, 179)",
    "rgb(90, 77, 179)",
    "rgb(94, 77, 179)",
    "rgb(95, 77, 179)",
    "rgb(97, 77, 179)",
    "rgb(99, 77, 179)",
    "rgb(100, 77, 179)",
    "rgb(104, 77, 179)",
    "rgb(105, 77, 179)",
    "rgb(107, 77, 179)",
    "rgb(109, 77, 179)",
    "rgb(110, 77, 179)",
    "rgb(114, 77, 179)",
    "rgb(116, 77, 179)",
    "rgb(117, 77, 179)",
    "rgb(119, 77, 179)",
    "rgb(121, 77, 179)",
    "rgb(124, 77, 179)",
    "rgb(126, 77, 179)",
    "rgb(128, 77, 179)",
    "rgb(129, 77, 179)",
    "rgb(131, 77, 179)",
    "rgb(134, 77, 179)",
    "rgb(136, 77, 179)",
    "rgb(138, 77, 179)",
    "rgb(148, 77, 179)",
    "rgb(150, 77, 179)",
    "rgb(151, 77, 179)",
    "rgb(155, 77, 179)",
    "rgb(156, 77, 179)",
    "rgb(158, 77, 179)",
    "rgb(160, 77, 179)",
    "rgb(161, 77, 179)",
    "rgb(170, 77, 179)",
    "rgb(172, 77, 179)",
    "rgb(175, 77, 179)",
    "rgb(177, 77, 179)",
    "rgb(179, 77, 179)",
    "rgb(179, 77, 177)",
    "rgb(179, 77, 175)",
    "rgb(179, 77, 172)",
    "rgb(179, 77, 160)",
    "rgb(179, 77, 158)",
    "rgb(179, 77, 156)",
    "rgb(179, 77, 148)",
    "rgb(179, 77, 138)",
    "rgb(179, 77, 129)",
    "rgb(179, 77, 128)",
    "rgb(179, 77, 126)",
    "rgb(179, 77, 124)",
    "rgb(179, 77, 121)",
    "rgb(179, 77, 119)",
    "rgb(179, 77, 100)",
    "rgb(179, 77, 94)",
    "rgb(179, 77, 90)",
    "rgb(179, 77, 88)",
    "rgb(179, 77, 87)",
    "rgb(179, 77, 85)",
    "rgb(179, 77, 83)",
    "rgb(179, 77, 80)",
    "rgb(179, 77, 78)"
  ]

export const randomColor = () => {
  const randomIndex = Math.floor(Math.random() * ThumbnailColors.length);
  return ThumbnailColors[randomIndex];
}


export default Colors;